---
# Preamble

## Author
author:
  name: Артём Дмитриевич Петлин
  degrees: Student
  orcid: 0000-0002-0877-7063
  email: 1132246846@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Отчёт по лабораторной работе №6"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Получить навыки управления процессами операционной системы.

# Задание

1. Продемонстрируйте навыки управления заданиями операционной системы (см. раздел 6.4.1).
2. Продемонстрируйте навыки управления процессами операционной системы (см. раздел 6.4.2).
3. Выполните задания для самостоятельной работы (см. раздел 6.5)

# Теоретическое введение

Под процессом в операционной системе понимается абстракция, описывающая вы-
полняющуюся программу.
Информацию о выполняющихся в операционной системе типа Unix процессах можно
получить, например, с помощью команд ps, top, htop.

# Выполнение лабораторной работы

![su -](image/1.png){#fig-001 width=100%}

Получаем полномочия администратора. Запускаем несколько фоновых процессов и один длительный процесс на переднем плане. Введите Ctrl + z , чтобы остановить
процесс. 

![bg | fg](image/2.png){#fig-002 width=100%}

Возобновляем выполнение приостановленного задания в фоновом режиме и наблюдаем изменение его статуса. Перемещаем одно из заданий на передний план. Завершаем выполнение задания на переднем плане с помощью комбинации клавиш и проверяем изменения в списке заданий.

![ctrl + z](image/3.png){#fig-003 width=100%}

Последовательно завершаем оставшиеся задания. 

![&](image/4.png){#fig-004 width=100%}

На втором терминале запускаем фоновый процесс от имени обычного пользователя. Закрываем второй терминал. На другом терминале проверяем, что процесс продолжает выполняться, с помощью системного монитора.

![top](image/5.png){#fig-005 width=100%}

![top](image/6.png){#fig-006 width=100%}

Завершаем оставшийся процесс через системный монитор.

![su -](image/7.png){#fig-007 width=100%}

Получаем полномочия администратора. Запускаем несколько фоновых процессов. Просматриваем информацию о запущенных процессах, фильтруя нужные нам процессы.

![renice](image/8.png){#fig-008 width=100%}

Изменяем приоритет одного из процессов, используя его идентификатор.

![ps fax | grep -B5 dd](image/9.png){#fig-009 width=100%}

Изучаем иерархию процессов, просматривая связи между родительскими и дочерними процессами.

![kill -9](image/10.png){#fig-010 width=100%}

Завершаем родительский процесс, что приводит к автоматическому завершению всех связанных дочерних процессов.

![renice](image/11.png){#fig-011 width=100%}

Запускаем три фоновых процесса. Повышаем приоритет одного из процессов, устанавливая отрицательное значение. Дополнительно изменяем приоритет того же процесса, устанавливая другое значение, и анализируем разницу в приоритетах.

![killa -9](image/12.png){#fig-012 width=100%}

Завершаем все запущенные процессы.

![yes](image/13.png){#fig-013 width=100%}

Запускаем фоновый процесс с перенаправлением вывода. Запускаем процесс на переднем плане с перенаправлением вывода, приостанавливаем его, затем возобновляем и завершаем.

![ctrl + z](image/14.png){#fig-014 width=100%}

![ctrl + c](image/15.png){#fig-015 width=100%}

Запускаем процесс на переднем плане без перенаправления вывода, приостанавливаем, возобновляем и завершаем его.

![yes](image/16.png){#fig-016 width=100%}

Проверяем состояния всех заданий. Переводим фоновый процесс на передний план и останавливаем его.

![yes](image/17.png){#fig-017 width=100%}

Переводим процесс с перенаправлением вывода в фоновый режим. Проверяем состояния заданий, обращая внимание на процессы, выполняющиеся в фоновом режиме.

![nohup](image/18.png){#fig-018 width=100%}

Запускаем процесс таким образом, чтобы он продолжал работу после закрытия терминала.

![ps -A](image/19.png){#fig-019 width=100%}

Закрываем и заново открываем терминал, проверяя продолжение работы процесса. Изучаем информацию о запущенных процессах с помощью системного монитора.

![yes](image/20.png){#fig-020 width=100%}

Запускаем три дополнительных фоновых процесса с перенаправлением вывода. Завершаем два процесса разными способами: по идентификатору процесса и по идентификатору задания. 

![kill -1](image/21.png){#fig-021 width=100%}

Отправляем сигнал завершения процессу, запущенному с защитой от разрыва связи, и обычному процессу, сравнивая их поведение.

![killall](image/22.png){#fig-022 width=100%}

Запускаем несколько дополнительных фоновых процессов. Завершаем все процессы одновременно с помощью команды группового завершения.

![yes](image/23.png){#fig-023 width=100%}

Запускаем два процесса с разными приоритетами и сравниваем их абсолютные и относительные приоритеты.

![renice](image/24.png){#fig-024 width=100%}

Выравниваем приоритеты двух процессов, изменяя значение приоритета для одного из них.

# Выводы

Мы получили навыки управления процессами операционной системы.

# Список литературы{.unnumbered}

::: {.refs}
1. Поттеринг Л. Systemd для администраторов: цикл статей. — 2010. — URL: http:
//wiki.opennet.ru/Systemd.
2. Neil N. J. Learning CentOS: A Beginners Guide to Learning Linux. — CreateSpace Inde-
pendent Publishing Platform, 2016.
3. Systemd. — 2022. — URL: https://wiki.archlinux.org/title/Systemd.
:::
