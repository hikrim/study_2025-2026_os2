---
# Preamble

## Author
author:
  name: Артём Дмитриевич Петлин
  degrees: Student
  orcid: 0000-0002-0877-7063
  email: 1132246846@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: Лабораторная работа №5
license: CC BY
date: 2025-10-03
## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги
## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
#### Language
    babel-lang: russian
    babel-otherlangs: english
### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Петлин Артём Дмитриевич
  * студент
  * группа НПИбд-02-24
  * Российский университет дружбы народов
  * [1132246846@pfur.ru](mailto:1132246846@pfur.ru)
  * <https://github.com/hikrim/study_2025-2026_os2>

:::
::: {.column width="30%"}

![](./image/foto2.jpg)

:::
::::::::::::::

# Цель работы

## Цель работы

Получить навыки управления системными службами операционной системы посредством systemd.

# Задание

## Задание

1. Выполните основные операции по запуску (останову), определению статуса, добавлению (удалению) в автозапуск и пр. службы Very Secure FTP (раздел 5.4.1).
2. Продемонстрируйте навыки по разрешению конфликтов юнитов для служб
firewalld и iptables (раздел 5.4.2).
3. Продемонстрируйте навыки работы с изолированными целями (разделы 5.4.3, 5.4.4).

# Теоретическое введение

## Теоретическое введение

Systemd (system daemon) — система инициализации служб операционной системы.
Под системой инициализации в данном случае понимается набор скриптов, выполняемых на этапе загрузки операционной системы.
Для выполнения операций над системными службами в systemd используются юниты
(units) — файлы конфигурации с определённым синтаксисом.

# Выполнение лабораторной работы

## Ход работы

![](image/1.png){#fig-001 width=100%}

Получаем полномочия администратора. Проверяем статус службы Very Secure FTP.

## Ход работы

![](image/2.png){#fig-002 width=100%}

Устанавливаем службу Very Secure FTP.

## Ход работы

:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Запускаем установленную службу. Снова проверяем статус службы. Служба будет работать, но не активируется при перезагрузке системы.

:::
::: {.column width="60%"}

![](image/3.png){#fig-003 width=100%}

:::
::::::::::::::





## Ход работы

![](image/4.png){#fig-004 width=100%}

Добавляем службу в автозапуск при загрузке системы, проверяем её статус.

## Ход работы

![](image/5.png){#fig-005 width=100%}

Затем удаляем службу из автозапуска и снова проверяем статус.

## Ход работы

:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Выводим на экран символические ссылки, ответственные за запуск различных сервисов. Ссылка на vsftpd.service отсутствует.

:::
::: {.column width="60%"}

![](image/6.png){#fig-006 width=100%}

:::
::::::::::::::





## Ход работы

:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Снова добавляем службу в автозапуск и выводим на экран символические ссылки. Создается символическая ссылкф для файла службы в соответствующем каталоге. Проверяем статус службы и наблюдаем изменение состояния юнита. Выводим на экран список зависимостей юнита.

:::
::: {.column width="60%"}

![](image/7.png){#fig-007 width=100%}

:::
::::::::::::::




## Ход работы

![](image/8.png){#fig-008 width=100%}

Выводим на экран список юнитов, которые зависят от данного юнита. 

## Ход работы

![](image/9.png){#fig-009 width=100%}

Получаем полномочия администратора и устанавливаем iptables.

## Ход работы

:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Проверяем статус служб firewalld и iptables.

:::
::: {.column width="60%"}

![](image/10.png){#fig-010 width=100%}

:::
::::::::::::::





## Ход работы

:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Пытаемся запустить обе службы и наблюдаем, что при запуске одной службы вторая деактивируется или не запускается.

:::
::: {.column width="60%"}

![](image/11.png){#fig-011 width=100%}

:::
::::::::::::::





## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Изучаем файл юнита firewalld и смотрим настройки конфликтов для этого юнита при их наличии.

:::
::: {.column width="60%"}

![](image/12.png){#fig-012 width=100%}

:::
::::::::::::::



## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Изучаем файл юнита iptables и настроек конфликтов для этого юнита нет.

:::
::: {.column width="60%"}

![](image/13.png){#fig-013 width=100%}

:::
::::::::::::::



## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Останавливаем службу iptables и запускаем службу firewalld. Блокируем запуск iptables. Проверяем создание символической ссылки, которая делает невозможным случайный запуск сервиса. Пытаемся запустить iptables и ожидаем сообщение об ошибке из-за маскировки службы. Пытаемся добавить iptables в автозапуск и наблюдаем, что сервис остаётся неактивным, а статус загрузки отображается как замаскированный.

:::
::: {.column width="60%"}

![](image/14.png){#fig-014 width=100%}

:::
::::::::::::::



## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Получаем полномочия администратора. Переходим в каталог systemd и находим список всех целей, которые можно изолировать.

:::
::: {.column width="60%"}

![](image/15.png){#fig-015 width=100%}

:::
::::::::::::::



## Ход работы

![](image/16.png){#fig-016 width=100%}

Переключаем операционную систему в режим восстановления. Для входа в систему вводим пароль root на консоли сервера.

## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Перезапускаем операционную систему, изолируя соответствующую цель.

:::
::: {.column width="60%"}

![](image/17.jpg){#fig-017 width=100%}

:::
::::::::::::::



## Ход работы

![](image/18.jpg){#fig-018 width=100%}

Получаем полномочия администратора.

## Ход работы

![](image/19.jpg){#fig-019 width=100%}

Устанавливаем цель по умолчанию для запуска в текстовом режиме. Перезагружаем систему и убеждаемся, что система загрузилась в текстовом режиме.

## Ход работы



:::::::::::::: {.columns align=center}
::: {.column width="40%"}

Устанавливаем цель по умолчанию для запуска в графическом режиме. Снова перезагружаем систему и убеждаемся, что система загрузилась в графическом режиме.

:::
::: {.column width="60%"}

![](image/20.jpg){#fig-020 width=100%}

:::
::::::::::::::



# Выводы

## Выводы

Мы получили навыки управления системными службами операционной системы посредством systemd.

# Список литературы{.unnumbered}

## Список литературы{.unnumbered}

::: {.refs}
1. Поттеринг Л. Systemd для администраторов: цикл статей. — 2010. — URL: http:
//wiki.opennet.ru/Systemd.
2. Neil N. J. Learning CentOS: A Beginners Guide to Learning Linux. — CreateSpace Inde-
pendent Publishing Platform, 2016.
3. Systemd. — 2022. — URL: https://wiki.archlinux.org/title/Systemd.
:::

:::::::::::::: {.columns align=center}
::: {.column width="40%"}



:::
::: {.column width="60%"}



:::
::::::::::::::
